-- MySQL Script generated by MySQL Workbench
-- Tue Apr 16 10:14:14 2019
-- Model: Knowledge Center    Version: 1.1
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema knowledge_center
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `knowledge_center` ;

-- -----------------------------------------------------
-- Schema knowledge_center
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `knowledge_center` DEFAULT CHARACTER SET utf8 ;
USE `knowledge_center` ;

-- -----------------------------------------------------
-- Table `knowledge_center`.`USER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`USER` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`USER` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `EMAIL` VARCHAR(30) NOT NULL,
  `PASSWORD` CHAR(64) NOT NULL,
  `ADMINISTRATOR` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `knowledge_center`.`ARTICLE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`ARTICLE` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`ARTICLE` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USER_ID` INT UNSIGNED NOT NULL,
  `TITLE` VARCHAR(30) NOT NULL,
  `ARTICLE` TEXT NOT NULL,
  `DATE` DATETIME NOT NULL,
  `VIEWS` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `ARTICLE_TITLE_UNIQUE` (`TITLE` ASC) VISIBLE,
  INDEX `FK_USER_ID_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `FK_ART_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`ARTICLE_NOTIFICATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`ARTICLE_NOTIFICATION` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`ARTICLE_NOTIFICATION` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `ARTICLE_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  `VIEWED` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `FK_ARTICLE_ID_idx` (`ARTICLE_ID` ASC) VISIBLE,
  INDEX `FK_USER_ID_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `FK_AN_ARTICLE_ID`
    FOREIGN KEY (`ARTICLE_ID`)
    REFERENCES `knowledge_center`.`ARTICLE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_AN_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`ARTICLE_VOTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`ARTICLE_VOTE` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`ARTICLE_VOTE` (
  `ARTICLE_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ARTICLE_ID`, `USER_ID`),
  INDEX `FK_USER_ID_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `FK_AV_ARTICLE_ID`
    FOREIGN KEY (`ARTICLE_ID`)
    REFERENCES `knowledge_center`.`ARTICLE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_AV_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`COMMENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`COMMENT` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`COMMENT` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USER_ID` INT UNSIGNED NOT NULL,
  `COMMENT` VARCHAR(255) NOT NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `FK_USER_ID_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `FK_CMT_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`COMMENT_NOTIFICATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`COMMENT_NOTIFICATION` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`COMMENT_NOTIFICATION` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `COMMENT_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  `VIEWED` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_CN_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CN_COMMENT_ID`
    FOREIGN KEY (`COMMENT_ID`)
    REFERENCES `knowledge_center`.`COMMENT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`COMMENT_VOTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`COMMENT_VOTE` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`COMMENT_VOTE` (
  `COMMENT_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  `BEST_ANSWER` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`COMMENT_ID`, `USER_ID`),
  CONSTRAINT `FK_CV_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CV_COMMENT_ID`
    FOREIGN KEY (`COMMENT_ID`)
    REFERENCES `knowledge_center`.`COMMENT` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`PROFILE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`PROFILE` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`PROFILE` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(17) NOT NULL,
  `PHOTO` BLOB NULL DEFAULT NULL,
  `LINKEDIN` VARCHAR(100) NULL DEFAULT NULL,
  `GITHUB` VARCHAR(39) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `PROFILE_USERNAME_UNIQUE` (`USERNAME` ASC) VISIBLE,
  CONSTRAINT `FK_PROFILE_USER`
    FOREIGN KEY (`ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`TAG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`TAG` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`TAG` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `TAG_NAME_UNIQUE` (`NAME` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `knowledge_center`.`USER_TAG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`USER_TAG` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`USER_TAG` (
  `USER_ID` INT UNSIGNED NOT NULL,
  `TAG_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`USER_ID`, `TAG_ID`),
  INDEX `FK_TAG_ID_idx` (`TAG_ID` ASC) INVISIBLE,
  CONSTRAINT `FK_UT_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_UT_TAG_ID`
    FOREIGN KEY (`TAG_ID`)
    REFERENCES `knowledge_center`.`TAG` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`QUESTION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`QUESTION` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`QUESTION` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USER_ID` INT UNSIGNED NOT NULL,
  `QUESTION` VARCHAR(255) NOT NULL,
  `DETAILS` TEXT NULL,
  `DATE` DATETIME NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `FK_USER_ID_idx` (`USER_ID` ASC) VISIBLE,
  CONSTRAINT `FK_QTN_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`QUESTION_NOTIFICATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`QUESTION_NOTIFICATION` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`QUESTION_NOTIFICATION` (
  `ID` INT UNSIGNED NOT NULL,
  `QUESTION_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  `VIEWED` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  INDEX `FK_QUESTION_ID_idx` (`QUESTION_ID` ASC) VISIBLE,
  CONSTRAINT `FK_QN_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_QN_QUESTION_ID`
    FOREIGN KEY (`QUESTION_ID`)
    REFERENCES `knowledge_center`.`QUESTION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`QUESTION_TAG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`QUESTION_TAG` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`QUESTION_TAG` (
  `QUESTION_ID` INT UNSIGNED NOT NULL,
  `TAG_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`QUESTION_ID`, `TAG_ID`),
  CONSTRAINT `FK_QT_QUESTION_ID`
    FOREIGN KEY (`QUESTION_ID`)
    REFERENCES `knowledge_center`.`QUESTION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_QT_TAG_ID`
    FOREIGN KEY (`TAG_ID`)
    REFERENCES `knowledge_center`.`TAG` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`QUESTION_VOTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`QUESTION_VOTE` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`QUESTION_VOTE` (
  `QUESTION_ID` INT UNSIGNED NOT NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`QUESTION_ID`, `USER_ID`),
  CONSTRAINT `FK_QV_USER_ID`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `knowledge_center`.`USER` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_QV_QUESTION_ID`
    FOREIGN KEY (`QUESTION_ID`)
    REFERENCES `knowledge_center`.`QUESTION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `knowledge_center`.`ARTICLE_TAG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `knowledge_center`.`ARTICLE_TAG` ;

CREATE TABLE IF NOT EXISTS `knowledge_center`.`ARTICLE_TAG` (
  `ARTICLE_ID` INT UNSIGNED NOT NULL,
  `TAG_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ARTICLE_ID`, `TAG_ID`),
  CONSTRAINT `FK_AT_ARTICLE_ID`
    FOREIGN KEY (`ARTICLE_ID`)
    REFERENCES `knowledge_center`.`ARTICLE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_AT_TAG_ID`
    FOREIGN KEY (`TAG_ID`)
    REFERENCES `knowledge_center`.`TAG` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
